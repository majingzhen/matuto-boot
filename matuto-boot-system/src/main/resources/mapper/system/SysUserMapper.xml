<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.matuto.boot.system.mapper.SysUserMapper">

    <resultMap type="com.matuto.boot.system.entity.SysUser" id="SysUserResult">
        <id     property="id"           column="id"            />
        <result property="username"     column="username"      />
        <result property="nickname"     column="nickname"      />
        <result property="email"        column="email"         />
        <result property="phone"        column="phone"         />
        <result property="sex"          column="sex"           />
        <result property="avatar"       column="avatar"        />
        <result property="password"     column="password"      />
        <result property="status"       column="status"        />
        <result property="loginIp"      column="login_ip"      />
        <result property="loginDate"    column="login_date"    />
        <result property="createBy"     column="create_by"     />
        <result property="createTime"   column="create_time"   />
        <result property="updateBy"     column="update_by"     />
        <result property="updateTime"   column="update_time"   />
        <result property="remark"       column="remark"        />
        <result property="deleted"      column="deleted"       />
    </resultMap>

    <sql id="selectUserVo">
        SELECT u.id, u.username, u.nickname, u.email, u.phone, u.sex, u.avatar, u.password, u.status, u.login_ip, u.login_date, u.create_by, u.create_time, u.update_by, u.update_time, u.remark, u.deleted
        FROM sys_user u
    </sql>

    <select id="selectUserList" parameterType="com.matuto.boot.system.entity.SysUser" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        WHERE u.deleted = 0
        <if test="username != null and username != ''">
            AND u.username like concat('%', #{username}, '%')
        </if>
        <if test="status != null">
            AND u.status = #{status}
        </if>
        <if test="phone != null and phone != ''">
            AND u.phone like concat('%', #{phone}, '%')
        </if>
        <if test="createTime != null">
            AND u.create_time >= #{createTime}
        </if>
        ORDER BY u.create_time DESC
    </select>

    <select id="selectUserByUserName" parameterType="String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        WHERE u.username = #{username} AND u.deleted = 0
    </select>

    <select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        WHERE u.id = #{userId} AND u.deleted = 0
    </select>

    <select id="checkUserNameUnique" parameterType="String" resultType="int">
        SELECT COUNT(1) FROM sys_user WHERE username = #{username} AND deleted = 0
    </select>

    <select id="checkPhoneUnique" parameterType="String" resultType="int">
        SELECT COUNT(1) FROM sys_user WHERE phone = #{phone} AND deleted = 0
    </select>

    <select id="checkEmailUnique" parameterType="String" resultType="int">
        SELECT COUNT(1) FROM sys_user WHERE email = #{email} AND deleted = 0
    </select>

    <insert id="insertUser" parameterType="com.matuto.boot.system.entity.SysUser" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_user (
            username, nickname, email, phone, sex, avatar, password, status, create_by, create_time, update_by, update_time, remark
        ) VALUES (
            #{username}, #{nickname}, #{email}, #{phone}, #{sex}, #{avatar}, #{password}, #{status}, #{createBy}, sysdate(), #{updateBy}, sysdate(), #{remark}
        )
    </insert>

    <update id="updateUser" parameterType="com.matuto.boot.system.entity.SysUser">
        UPDATE sys_user
        <set>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="nickname != null and nickname != ''">nickname = #{nickname},</if>
            <if test="email != null and email != ''">email = #{email},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="status != null">status = #{status},</if>
            <if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
            <if test="loginDate != null">login_date = #{loginDate},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate(),
            <if test="remark != null">remark = #{remark},</if>
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateUserAvatar" parameterType="String">
        UPDATE sys_user SET avatar = #{avatar} WHERE id = #{userId}
    </update>

    <update id="resetUserPwd" parameterType="String">
        UPDATE sys_user SET password = #{password} WHERE id = #{userId}
    </update>

    <update id="deleteUserById" parameterType="Long">
        UPDATE sys_user SET deleted = 1 WHERE id = #{userId}
    </update>

    <update id="deleteUserByIds" parameterType="Long">
        UPDATE sys_user SET deleted = 1 WHERE id IN
        <foreach collection="array" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </update>

    <select id="selectUserRoles" resultType="java.lang.Long">
        select role_id
        from sys_user_role
        where user_id = #{userId}
    </select>

    <delete id="deleteUserRoles">
        delete from sys_user_role where user_id = #{userId}
    </delete>

    <insert id="insertUserRoles">
        insert into sys_user_role(user_id, role_id) values
        <foreach collection="roleIds" item="roleId" separator=",">
            (#{userId}, #{roleId})
        </foreach>
    </insert>

</mapper> 